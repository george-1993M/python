{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c21e5c1d-3db7-42b0-aa46-4760c14bae20",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.sub-fields in AI area:\n",
      "2.Machine Learning\n",
      "3.vision\n",
      "4.Robotics\n",
      "5.Speech processing\n",
      "6.natural language processing\n"
     ]
    }
   ],
   "source": [
    "def sub_fields():\n",
    "    print(\"1.sub-fields in AI area:\")\n",
    "    print(\"2.Machine Learning\")\n",
    "    print(\"3.vision\")\n",
    "    print(\"4.Robotics\")\n",
    "    print(\"5.Speech processing\")\n",
    "    print(\"6.natural language processing\")\n",
    "sub_fields()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3aa74d47-7c05-4546-a8d8-b58e1120b9df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number:  4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 is an Even number\n"
     ]
    }
   ],
   "source": [
    "def oddEven():\n",
    "    num = int(input(\"Enter a number: \"))\n",
    "    if num % 2 == 0:\n",
    "        print(f\"{num} is an Even number\")   # if block\n",
    "    else:\n",
    "        print(f\"{num} is an Odd number\")    # else block\n",
    "\n",
    "oddEven())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "29069804-fc3e-4f43-9df6-0a12cd3c3933",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Your gender (male/female):  male\n",
      "Your age:  21\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eligible for marriage\n"
     ]
    }
   ],
   "source": [
    "def Eligible():\n",
    "    gender = input(\"Your gender (male/female): \").lower()\n",
    "    age = int(input(\"Your age: \"))\n",
    "\n",
    "    if gender == \"male\":\n",
    "        if age >= 21:\n",
    "            print(\"Eligible for marriage\")\n",
    "        else:\n",
    "            print(\"Not eligible for marriage\")\n",
    "    elif gender == \"female\":\n",
    "        if age >= 18:\n",
    "            print(\"Eligible for marriage\")\n",
    "        else:\n",
    "            print(\"Not eligible for marriage\")\n",
    "    else:\n",
    "        print(\"Invalid gender input\")\n",
    "\n",
    "Eligible()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "dcf5f981-645b-4ee9-a5e0-776b1b37e843",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter Subject 1 marks:  23\n",
      "Enter Subject 2 marks:  45\n",
      "Enter Subject 3 marks:  34\n",
      "Enter Subject 4 marks:  23\n",
      "Enter Subject 5 marks:  23\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total: 148\n",
      "Percentage: 29.599999999999998\n"
     ]
    }
   ],
   "source": [
    "def Percentage():\n",
    "    subject1 = int(input(\"Enter Subject 1 marks: \"))\n",
    "    subject2 = int(input(\"Enter Subject 2 marks: \"))\n",
    "    subject3 = int(input(\"Enter Subject 3 marks: \"))\n",
    "    subject4 = int(input(\"Enter Subject 4 marks: \"))\n",
    "    subject5 = int(input(\"Enter Subject 5 marks: \"))\n",
    "\n",
    "    total = subject1 + subject2 + subject3 + subject4 + subject5\n",
    "    percentage = (total / 500) * 100  # assuming each subject is out of 100\n",
    "\n",
    "    print(f\"Total: {total}\")\n",
    "    print(f\"Percentage: {percentage}\")\n",
    "\n",
    "Percentage()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4939721e-7c12-4f86-9692-1fcebdb10650",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter height:  3\n",
      "Enter breadth:  4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Area formula: (height * breadth) / 2\n",
      "Area of triangle: 6.0\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter height1:  3\n",
      "Enter height2:  4\n",
      "Enter breadth again for perimeter:  45\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Perimeter formula: height1 + height2 + breadth\n",
      "Perimeter of triangle: 52.0\n"
     ]
    }
   ],
   "source": [
    "def Triangle():\n",
    "    height = float(input(\"Enter height: \"))\n",
    "    breadth = float(input(\"Enter breadth: \"))\n",
    "\n",
    "    # Area calculation\n",
    "    area = (height * breadth) / 2\n",
    "    print(f\"Area formula: (height * breadth) / 2\")\n",
    "    print(f\"Area of triangle: {area}\")\n",
    "\n",
    "    # Perimeter calculation\n",
    "    height1 = float(input(\"Enter height1: \"))\n",
    "    height2 = float(input(\"Enter height2: \"))\n",
    "    breadth2 = float(input(\"Enter breadth again for perimeter: \"))\n",
    "\n",
    "    perimeter = height1 + height2 + breadth2\n",
    "    print(f\"Perimeter formula: height1 + height2 + breadth\")\n",
    "    print(f\"Perimeter of triangle: {perimeter}\")\n",
    "\n",
    "Triangle()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "216af197-b979-4e12-b5dc-58430cb6ea7f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
